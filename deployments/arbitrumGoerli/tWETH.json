{
  "address": "0xe91C134fd945cC0723fd3eB2C0AbEe2188fc33E7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd4c38a7493b24786ab2b7e71b9af0fc34ef4cd6874a6baa7158570459f2e3f77",
  "receipt": {
    "to": null,
    "from": "0x508DDE1109C6A0E7552bb083B89D540F80Db95d3",
    "contractAddress": "0xe91C134fd945cC0723fd3eB2C0AbEe2188fc33E7",
    "transactionIndex": 1,
    "gasUsed": "1395856",
    "logsBloom": "0x
    "blockHash": "0xfdef3c7d05f344d7ec9f7ae32059bfdb74d601649bab0ab36a19ebc829230668",
    "transactionHash": "0xd4c38a7493b24786ab2b7e71b9af0fc34ef4cd6874a6baa7158570459f2e3f77",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 19329730,
        "transactionHash": "0xd4c38a7493b24786ab2b7e71b9af0fc34ef4cd6874a6baa7158570459f2e3f77",
        "address": "0xe91C134fd945cC0723fd3eB2C0AbEe2188fc33E7",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000508dde1109c6a0e7552bb083b89d540f80db95d3"
        ],
        "data": "0x000000000000000000000000000000000000000000084595161401484a000000",
        "logIndex": 0,
        "blockHash": "0xfdef3c7d05f344d7ec9f7ae32059bfdb74d601649bab0ab36a19ebc829230668"
      }
    ],
    "blockNumber": 19329730,
    "cumulativeGasUsed": "1395856",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "tWETH",
    "tWETH"
  ],
  "numDeployments": 1,
  "solcInputHash": "8dff7e2ad4b77b583586b811477c1941",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/moat/test/tWETH.sol\":\"tWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\"},\"contracts/moat/test/tWETH.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\nimport \\\"../../@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {ERC20} from \\\"../../solmate/src/tokens/ERC20.sol\\\";\\n\\ncontract tWETH is ERC20 {\\n    constructor(string memory name, string memory symbol) ERC20(name, symbol, 18) {\\n        _mint(msg.sender, 10000000 * (10**18));\\n    }\\n\\n    // used to make initialization of test wallets easy\\n    function mint(address to, uint256 amount) public {\\n        _mint(to, amount);\\n    }\\n}\",\"keccak256\":\"0x99a879fbfdf51ae9037ea94aa557f02c1d9d5bda4a25d47329915a74d651f280\",\"license\":\"Unlicense\"},\"contracts/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol, uint8 _decimals) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\\n        public\\n        virtual\\n    {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return keccak256(\\n            abi.encode(\\n                keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                keccak256(bytes(name)),\\n                keccak256(\\\"1\\\"),\\n                block.chainid,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x4070106775a06b95735c7f7903435cf94cd91c9660c18a39035296e9807f9096\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162001ded38038062001ded833981810160405281019062000037919062000473565b8181601282600090805190602001906200005392919062000226565b5081600190805190602001906200006c92919062000226565b508060ff1660808160ff16815250504660a0818152505062000093620000c260201b60201c565b60c08181525050505050620000ba336a084595161401484a0000006200015260201b60201c565b5050620007a2565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000f6919062000608565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001620001379594939291906200069c565b60405160208183030381529060405280519060200120905090565b806002600082825462000166919062000728565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021a919062000785565b60405180910390a35050565b828054620002349062000527565b90600052602060002090601f016020900481019282620002585760008555620002a4565b82601f106200027357805160ff1916838001178555620002a4565b82800160010185558215620002a4579182015b82811115620002a357825182559160200191906001019062000286565b5b509050620002b39190620002b7565b5090565b5b80821115620002d2576000816000905550600101620002b8565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200033f82620002f4565b810181811067ffffffffffffffff8211171562000361576200036062000305565b5b80604052505050565b600062000376620002d6565b905062000384828262000334565b919050565b600067ffffffffffffffff821115620003a757620003a662000305565b5b620003b282620002f4565b9050602081019050919050565b60005b83811015620003df578082015181840152602081019050620003c2565b83811115620003ef576000848401525b50505050565b60006200040c620004068462000389565b6200036a565b9050828152602081018484840111156200042b576200042a620002ef565b5b62000438848285620003bf565b509392505050565b600082601f830112620004585762000457620002ea565b5b81516200046a848260208601620003f5565b91505092915050565b600080604083850312156200048d576200048c620002e0565b5b600083015167ffffffffffffffff811115620004ae57620004ad620002e5565b5b620004bc8582860162000440565b925050602083015167ffffffffffffffff811115620004e057620004df620002e5565b5b620004ee8582860162000440565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200054057607f821691505b60208210811415620005575762000556620004f8565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546200058c8162000527565b6200059881866200055d565b94506001821660008114620005b65760018114620005c857620005ff565b60ff19831686528186019350620005ff565b620005d38562000568565b60005b83811015620005f757815481890152600182019150602081019050620005d6565b838801955050505b50505092915050565b60006200061682846200057d565b915081905092915050565b6000819050919050565b620006368162000621565b82525050565b6000819050919050565b62000651816200063c565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006848262000657565b9050919050565b620006968162000677565b82525050565b600060a082019050620006b360008301886200062b565b620006c260208301876200062b565b620006d160408301866200062b565b620006e0606083018562000646565b620006ef60808301846200068b565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000735826200063c565b915062000742836200063c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200077a5762000779620006f9565b5b828201905092915050565b60006020820190506200079c600083018462000646565b92915050565b60805160a05160c05161161b620007d260003960006106ee015260006106ba01526000610694015261161b6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b4114610228578063a9059cbb14610246578063d505accf14610276578063dd62ed3e14610292576100cf565b806340c10f19146101ac57806370a08231146101c85780637ecebe00146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce567146101705780633644e5151461018e575b600080fd5b6100dc6102c2565b6040516100e99190610e06565b60405180910390f35b61010c60048036038101906101079190610ec1565b610350565b6040516101199190610f1c565b60405180910390f35b61012a610442565b6040516101379190610f46565b60405180910390f35b61015a60048036038101906101559190610f61565b610448565b6040516101679190610f1c565b60405180910390f35b610178610692565b6040516101859190610fd0565b60405180910390f35b6101966106b6565b6040516101a39190611004565b60405180910390f35b6101c660048036038101906101c19190610ec1565b610713565b005b6101e260048036038101906101dd919061101f565b610721565b6040516101ef9190610f46565b60405180910390f35b610212600480360381019061020d919061101f565b610739565b60405161021f9190610f46565b60405180910390f35b610230610751565b60405161023d9190610e06565b60405180910390f35b610260600480360381019061025b9190610ec1565b6107df565b60405161026d9190610f1c565b60405180910390f35b610290600480360381019061028b91906110a4565b6108f3565b005b6102ac60048036038101906102a79190611146565b610bec565b6040516102b99190610f46565b60405180910390f35b600080546102cf906111b5565b80601f01602080910402602001604051908101604052809291908181526020018280546102fb906111b5565b80156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104309190610f46565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461057e5782816104fd9190611216565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105cd9190611216565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161067e9190610f46565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106ec576106e7610c11565b61070e565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b61071d8282610c9d565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461075e906111b5565b80601f016020809104026020016040519081016040528092919081815260200182805461078a906111b5565b80156107d75780601f106107ac576101008083540402835291602001916107d7565b820191906000526020600020905b8154815290600101906020018083116107ba57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108309190611216565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108e19190610f46565b60405180910390a36001905092915050565b42841015610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092d90611296565b60405180910390fd5b600060016109426106b6565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020016109ca969594939291906112c5565b604051602081830303815290604052805190602001206040516020016109f192919061139e565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610a2794939291906113d5565b6020604051602081039080840390855afa158015610a49573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610abd57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af390611466565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610bdb9190610f46565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610c439190611525565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c8295949392919061153c565b60405160208183030381529060405280519060200120905090565b8060026000828254610caf919061158f565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d619190610f46565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610da7578082015181840152602081019050610d8c565b83811115610db6576000848401525b50505050565b6000601f19601f8301169050919050565b6000610dd882610d6d565b610de28185610d78565b9350610df2818560208601610d89565b610dfb81610dbc565b840191505092915050565b60006020820190508181036000830152610e208184610dcd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5882610e2d565b9050919050565b610e6881610e4d565b8114610e7357600080fd5b50565b600081359050610e8581610e5f565b92915050565b6000819050919050565b610e9e81610e8b565b8114610ea957600080fd5b50565b600081359050610ebb81610e95565b92915050565b60008060408385031215610ed857610ed7610e28565b5b6000610ee685828601610e76565b9250506020610ef785828601610eac565b9150509250929050565b60008115159050919050565b610f1681610f01565b82525050565b6000602082019050610f316000830184610f0d565b92915050565b610f4081610e8b565b82525050565b6000602082019050610f5b6000830184610f37565b92915050565b600080600060608486031215610f7a57610f79610e28565b5b6000610f8886828701610e76565b9350506020610f9986828701610e76565b9250506040610faa86828701610eac565b9150509250925092565b600060ff82169050919050565b610fca81610fb4565b82525050565b6000602082019050610fe56000830184610fc1565b92915050565b6000819050919050565b610ffe81610feb565b82525050565b60006020820190506110196000830184610ff5565b92915050565b60006020828403121561103557611034610e28565b5b600061104384828501610e76565b91505092915050565b61105581610fb4565b811461106057600080fd5b50565b6000813590506110728161104c565b92915050565b61108181610feb565b811461108c57600080fd5b50565b60008135905061109e81611078565b92915050565b600080600080600080600060e0888a0312156110c3576110c2610e28565b5b60006110d18a828b01610e76565b97505060206110e28a828b01610e76565b96505060406110f38a828b01610eac565b95505060606111048a828b01610eac565b94505060806111158a828b01611063565b93505060a06111268a828b0161108f565b92505060c06111378a828b0161108f565b91505092959891949750929550565b6000806040838503121561115d5761115c610e28565b5b600061116b85828601610e76565b925050602061117c85828601610e76565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111cd57607f821691505b602082108114156111e1576111e0611186565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061122182610e8b565b915061122c83610e8b565b92508282101561123f5761123e6111e7565b5b828203905092915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611280601783610d78565b915061128b8261124a565b602082019050919050565b600060208201905081810360008301526112af81611273565b9050919050565b6112bf81610e4d565b82525050565b600060c0820190506112da6000830189610ff5565b6112e760208301886112b6565b6112f460408301876112b6565b6113016060830186610f37565b61130e6080830185610f37565b61131b60a0830184610f37565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611367600283611326565b915061137282611331565b600282019050919050565b6000819050919050565b61139861139382610feb565b61137d565b82525050565b60006113a98261135a565b91506113b58285611387565b6020820191506113c58284611387565b6020820191508190509392505050565b60006080820190506113ea6000830187610ff5565b6113f76020830186610fc1565b6114046040830185610ff5565b6114116060830184610ff5565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611450600e83610d78565b915061145b8261141a565b602082019050919050565b6000602082019050818103600083015261147f81611443565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546114b3816111b5565b6114bd8186611486565b945060018216600081146114d857600181146114e95761151c565b60ff1983168652818601935061151c565b6114f285611491565b60005b83811015611514578154818901526001820191506020810190506114f5565b838801955050505b50505092915050565b600061153182846114a6565b915081905092915050565b600060a0820190506115516000830188610ff5565b61155e6020830187610ff5565b61156b6040830186610ff5565b6115786060830185610f37565b61158560808301846112b6565b9695505050505050565b600061159a82610e8b565b91506115a583610e8b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115da576115d96111e7565b5b82820190509291505056fea2646970667358221220824f3f1ac5ba330683f41332937c58289a0f07b9d52fd997574964238452614364736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b4114610228578063a9059cbb14610246578063d505accf14610276578063dd62ed3e14610292576100cf565b806340c10f19146101ac57806370a08231146101c85780637ecebe00146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce567146101705780633644e5151461018e575b600080fd5b6100dc6102c2565b6040516100e99190610e06565b60405180910390f35b61010c60048036038101906101079190610ec1565b610350565b6040516101199190610f1c565b60405180910390f35b61012a610442565b6040516101379190610f46565b60405180910390f35b61015a60048036038101906101559190610f61565b610448565b6040516101679190610f1c565b60405180910390f35b610178610692565b6040516101859190610fd0565b60405180910390f35b6101966106b6565b6040516101a39190611004565b60405180910390f35b6101c660048036038101906101c19190610ec1565b610713565b005b6101e260048036038101906101dd919061101f565b610721565b6040516101ef9190610f46565b60405180910390f35b610212600480360381019061020d919061101f565b610739565b60405161021f9190610f46565b60405180910390f35b610230610751565b60405161023d9190610e06565b60405180910390f35b610260600480360381019061025b9190610ec1565b6107df565b60405161026d9190610f1c565b60405180910390f35b610290600480360381019061028b91906110a4565b6108f3565b005b6102ac60048036038101906102a79190611146565b610bec565b6040516102b99190610f46565b60405180910390f35b600080546102cf906111b5565b80601f01602080910402602001604051908101604052809291908181526020018280546102fb906111b5565b80156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104309190610f46565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461057e5782816104fd9190611216565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105cd9190611216565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161067e9190610f46565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106ec576106e7610c11565b61070e565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b61071d8282610c9d565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461075e906111b5565b80601f016020809104026020016040519081016040528092919081815260200182805461078a906111b5565b80156107d75780601f106107ac576101008083540402835291602001916107d7565b820191906000526020600020905b8154815290600101906020018083116107ba57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108309190611216565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108e19190610f46565b60405180910390a36001905092915050565b42841015610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092d90611296565b60405180910390fd5b600060016109426106b6565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020016109ca969594939291906112c5565b604051602081830303815290604052805190602001206040516020016109f192919061139e565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610a2794939291906113d5565b6020604051602081039080840390855afa158015610a49573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610abd57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af390611466565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610bdb9190610f46565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610c439190611525565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c8295949392919061153c565b60405160208183030381529060405280519060200120905090565b8060026000828254610caf919061158f565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d619190610f46565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610da7578082015181840152602081019050610d8c565b83811115610db6576000848401525b50505050565b6000601f19601f8301169050919050565b6000610dd882610d6d565b610de28185610d78565b9350610df2818560208601610d89565b610dfb81610dbc565b840191505092915050565b60006020820190508181036000830152610e208184610dcd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5882610e2d565b9050919050565b610e6881610e4d565b8114610e7357600080fd5b50565b600081359050610e8581610e5f565b92915050565b6000819050919050565b610e9e81610e8b565b8114610ea957600080fd5b50565b600081359050610ebb81610e95565b92915050565b60008060408385031215610ed857610ed7610e28565b5b6000610ee685828601610e76565b9250506020610ef785828601610eac565b9150509250929050565b60008115159050919050565b610f1681610f01565b82525050565b6000602082019050610f316000830184610f0d565b92915050565b610f4081610e8b565b82525050565b6000602082019050610f5b6000830184610f37565b92915050565b600080600060608486031215610f7a57610f79610e28565b5b6000610f8886828701610e76565b9350506020610f9986828701610e76565b9250506040610faa86828701610eac565b9150509250925092565b600060ff82169050919050565b610fca81610fb4565b82525050565b6000602082019050610fe56000830184610fc1565b92915050565b6000819050919050565b610ffe81610feb565b82525050565b60006020820190506110196000830184610ff5565b92915050565b60006020828403121561103557611034610e28565b5b600061104384828501610e76565b91505092915050565b61105581610fb4565b811461106057600080fd5b50565b6000813590506110728161104c565b92915050565b61108181610feb565b811461108c57600080fd5b50565b60008135905061109e81611078565b92915050565b600080600080600080600060e0888a0312156110c3576110c2610e28565b5b60006110d18a828b01610e76565b97505060206110e28a828b01610e76565b96505060406110f38a828b01610eac565b95505060606111048a828b01610eac565b94505060806111158a828b01611063565b93505060a06111268a828b0161108f565b92505060c06111378a828b0161108f565b91505092959891949750929550565b6000806040838503121561115d5761115c610e28565b5b600061116b85828601610e76565b925050602061117c85828601610e76565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111cd57607f821691505b602082108114156111e1576111e0611186565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061122182610e8b565b915061122c83610e8b565b92508282101561123f5761123e6111e7565b5b828203905092915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611280601783610d78565b915061128b8261124a565b602082019050919050565b600060208201905081810360008301526112af81611273565b9050919050565b6112bf81610e4d565b82525050565b600060c0820190506112da6000830189610ff5565b6112e760208301886112b6565b6112f460408301876112b6565b6113016060830186610f37565b61130e6080830185610f37565b61131b60a0830184610f37565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611367600283611326565b915061137282611331565b600282019050919050565b6000819050919050565b61139861139382610feb565b61137d565b82525050565b60006113a98261135a565b91506113b58285611387565b6020820191506113c58284611387565b6020820191508190509392505050565b60006080820190506113ea6000830187610ff5565b6113f76020830186610fc1565b6114046040830185610ff5565b6114116060830184610ff5565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611450600e83610d78565b915061145b8261141a565b602082019050919050565b6000602082019050818103600083015261147f81611443565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546114b3816111b5565b6114bd8186611486565b945060018216600081146114d857600181146114e95761151c565b60ff1983168652818601935061151c565b6114f285611491565b60005b83811015611514578154818901526001820191506020810190506114f5565b838801955050505b50505092915050565b600061153182846114a6565b915081905092915050565b600060a0820190506115516000830188610ff5565b61155e6020830187610ff5565b61156b6040830186610ff5565b6115786060830185610f37565b61158560808301846112b6565b9695505050505050565b600061159a82610e8b565b91506115a583610e8b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115da576115d96111e7565b5b82820190509291505056fea2646970667358221220824f3f1ac5ba330683f41332937c58289a0f07b9d52fd997574964238452614364736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6775,
        "contract": "contracts/moat/test/tWETH.sol:tWETH",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 6777,
        "contract": "contracts/moat/test/tWETH.sol:tWETH",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 6781,
        "contract": "contracts/moat/test/tWETH.sol:tWETH",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 6785,
        "contract": "contracts/moat/test/tWETH.sol:tWETH",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6791,
        "contract": "contracts/moat/test/tWETH.sol:tWETH",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 6799,
        "contract": "contracts/moat/test/tWETH.sol:tWETH",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}